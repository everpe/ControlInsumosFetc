
package interfaz;

import clases.Provider;
import clases.Purchase;
import clases.Restaurant;
import dialogos.DialogDetailPurchase;
import dialogos.DialogNewProvider;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import logicainterfaz.RenderTable;
import logicainterfaz.TableController;

/**
 *
 * @author ever
 */
public class PanelCompras extends javax.swing.JPanel {


    private Restaurant restaurant;
    private TableController tableController;
    private DefaultTableModel modelo; 
   
    private final ImageIcon iconCheck = new ImageIcon("src/img/iconEye.png");
    private JButton btnCheck;   

    private final Font font1= new Font("Cambria", 0, 18);
    /**
     * Creates new form PanelCompras
     */
    public PanelCompras(String titulo,Restaurant restaurant) {
        initComponents();
        lblTitulo.setText(titulo);
        lblTitulo.setFont(font1);
        this.restaurant=restaurant;
        this.tableController=new TableController(this.restaurant);
        
        this.createTable(restaurant.getPurchases());
    }
    public PanelCompras(String titulo) {
        initComponents();
        lblTitulo.setText(titulo);
    }
    
     
    /**
     * Metodo que crea y llena la Tabla.
     * @param purchases 
     */
    public void createTable(ArrayList<Purchase>purchases)
    {
        //inicializa estilos de la tabla y sus botones.
        this.initTable();
        //Limpia datos viejos de la tabla
        this.clearDataFromTable();
        //Llena la Tabla con Providers del Restaurante.
        if(purchases.size()>0&&purchases!=null){
            try{
                for(int i=0;i<purchases.size();i++)
                {
                    Purchase pur=purchases.get(i);
                    Object [] arreglo ={pur.getId(),pur.getCreateAt(),pur.getObservation()
                            ,pur.getProvider().getName(),pur.getValue(),btnCheck};
                    modelo.addRow(arreglo);    
                }
                table.setModel(modelo);
            }catch(Exception e){ 
                System.out.println("ERROR:pintando tabla proveedores"+e.getMessage());
            }
            this.table.setModel(modelo);
        }
//       
    }
    
    
    /**
     * Da configuración y estilos a la Tabla y sus botones
     */
    public void initTable(){
        
        
        
        btnCheck= new JButton("Ver");
        btnCheck.setIcon(iconCheck);
        btnCheck.setName("btnCheck");
        btnCheck.setBackground(new Color(37, 122, 218 ));
        btnCheck.setForeground(new Color(255,255,255));
        
        table.setDefaultRenderer(Object.class, new RenderTable());
        //Define Columnas y desabilita edicion.
        this.modelo = new DefaultTableModel(
                        new Object[][]{{"","","","","","",""}},
                        new Object[] {"ID","Fecha_Creación","Comentarios","Nombre_Proveedor","Valor","Ver Detalle"} 
                    ){
                        public boolean isCellEditable(int rowIndex, int vColIndex) {
                            return false;
                        }
                    };
        JTableHeader header = table.getTableHeader();
        header.setFont(font1);
        header.setForeground(new Color(255,255,255));
        header.setBackground(new Color(73, 93, 101 ));
    }
    
    /**
     * Hace el barrido de la información contenida en una tabla.
     * @param modeloTabla Modelo de la tabla que se desea barrer.
     */
    public void clearDataFromTable()
    {        
        int a =modelo.getRowCount()-1;
        for(int i=a; i>=0; i--)
        {
            modelo.removeRow(i);
        }            
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        scrollTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitulo.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 21)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(51, 51, 51));
        lblTitulo.setText("TITULO DE LA TABLA");

        scrollTable.setBackground(new java.awt.Color(255, 255, 255));
        scrollTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrollTableMouseClicked(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        scrollTable.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(325, 325, 325))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void scrollTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrollTableMouseClicked
        
        
    }//GEN-LAST:event_scrollTableMouseClicked

    
    /**
     * Evento cuando se clickea la Table del Panel
     * @param evt 
     */
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int col=table.getColumnModel().getColumnIndexAtX(evt.getX());
        int row=evt.getY()/table.getRowHeight();
        
        //Verifica que lo que clikeo fué un boton
        if(row < table.getRowCount()  && row >= 0 && col < table.getColumnCount()
                && col >= 0){
            Object value=table.getValueAt(row, col);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton btn= (JButton)value;
                
                if(btn.getName().equals("btnCheck")){
                    this.viewSuppliesPurchase();
                    System.out.println(btn.getName());
                }
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    private void viewSuppliesPurchase(){
        Purchase pur = this.tableController.getPurchaseFromTable(this.table);
        if(pur == null)
            JOptionPane.showMessageDialog(this, "No Se Seleccionó Ningún Proveedor");
        else{ 
            DialogDetailPurchase dialogDetailP= new DialogDetailPurchase(null, true, pur);
            dialogDetailP.setVisible(true);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
